{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Guru\\\\Desktop\\\\MemeGenerator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useState,useEffect}from'react';export var StateContext=createContext({});var ContextProvider=function ContextProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),memes=_useState2[0],setMemes=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),imgData=_useState4[0],setImgData=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedMemeSrc=_useState6[0],setSelectedMemeSrc=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),currentMemeIdx=_useState8[0],setCurrentMemeIdx=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),inputs=_useState10[0],setInputs=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),loading=_useState12[0],setLoading=_useState12[1];useEffect(function(){fetch('https://api.imgflip.com/get_memes').then(function(response){return response.json();}).then(function(json){var allMemes=json.data.memes.slice(0,90);setMemes(allMemes);}).catch(function(error){return console.log(error.message);});},[]);return/*#__PURE__*/React.createElement(StateContext.Provider,{value:{loading:loading,setLoading:setLoading,currentMemeIdx:currentMemeIdx,setCurrentMemeIdx:setCurrentMemeIdx,inputs:inputs,setInputs:setInputs,memes:memes,selectedMemeSrc:selectedMemeSrc,setSelectedMemeSrc:setSelectedMemeSrc,imgData:imgData,setImgData:setImgData}},children);};export default ContextProvider;","map":{"version":3,"sources":["C:/Users/Guru/Desktop/MemeGenerator/src/context.js"],"names":["React","createContext","useState","useEffect","StateContext","ContextProvider","children","memes","setMemes","imgData","setImgData","selectedMemeSrc","setSelectedMemeSrc","currentMemeIdx","setCurrentMemeIdx","inputs","setInputs","loading","setLoading","fetch","then","response","json","allMemes","data","slice","catch","error","console","log","message"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,QAA/B,CAAyCC,SAAzC,KAA0D,OAA1D,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGH,aAAa,CAAC,EAAD,CAAlC,CAEP,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACdJ,QAAQ,CAAC,EAAD,CADM,wCACjCK,KADiC,eAC1BC,QAD0B,8BAEVN,QAAQ,CAAC,IAAD,CAFE,yCAEjCO,OAFiC,eAExBC,UAFwB,8BAGMR,QAAQ,CAAC,IAAD,CAHd,yCAGjCS,eAHiC,eAGhBC,kBAHgB,8BAIIV,QAAQ,CAAC,IAAD,CAJZ,yCAIjCW,cAJiC,eAIjBC,iBAJiB,8BAKZZ,QAAQ,CAAC,EAAD,CALI,0CAKjCa,MALiC,gBAKzBC,SALyB,gCAMVd,QAAQ,CAAC,KAAD,CANE,2CAMjCe,OANiC,gBAMxBC,UANwB,gBAQxCf,SAAS,CAAC,UAAM,CACdgB,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACE,IAAD,CAAU,CACd,GAAMC,CAAAA,QAAQ,CAAGD,IAAI,CAACE,IAAL,CAAUjB,KAAV,CAAgBkB,KAAhB,CAAsB,CAAtB,CAAyB,EAAzB,CAAjB,CACAjB,QAAQ,CAACe,QAAD,CAAR,CACD,CALH,EAMGG,KANH,CAMS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAAX,EANT,EAOD,CARQ,CAQN,EARM,CAAT,CAUA,mBACE,oBAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLb,OAAO,CAAPA,OADK,CAELC,UAAU,CAAVA,UAFK,CAGLL,cAAc,CAAdA,cAHK,CAILC,iBAAiB,CAAjBA,iBAJK,CAKLC,MAAM,CAANA,MALK,CAMLC,SAAS,CAATA,SANK,CAOLT,KAAK,CAALA,KAPK,CAQLI,eAAe,CAAfA,eARK,CASLC,kBAAkB,CAAlBA,kBATK,CAULH,OAAO,CAAPA,OAVK,CAWLC,UAAU,CAAVA,UAXK,CADT,EAeGJ,QAfH,CADF,CAmBD,CArCD,CAuCA,cAAeD,CAAAA,eAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const StateContext = createContext({});\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [imgData, setImgData] = useState(null);\r\n  const [selectedMemeSrc, setSelectedMemeSrc] = useState(null);\r\n  const [currentMemeIdx, setCurrentMemeIdx] = useState(null);\r\n  const [inputs, setInputs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.imgflip.com/get_memes')\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const allMemes = json.data.memes.slice(0, 90);\r\n        setMemes(allMemes);\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n  }, []);\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        loading,\r\n        setLoading,\r\n        currentMemeIdx,\r\n        setCurrentMemeIdx,\r\n        inputs,\r\n        setInputs,\r\n        memes,\r\n        selectedMemeSrc,\r\n        setSelectedMemeSrc,\r\n        imgData,\r\n        setImgData,\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}